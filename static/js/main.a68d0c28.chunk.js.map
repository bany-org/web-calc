{"version":3,"sources":["assets/tadadum.mp3","assets/pik.mp3","assets/bum.mp3","components/Display.js","components/Button.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","DisplayArea","styled","div","ExpressionRow","ResultRow","Display","values","val","result","console","log","toString","length","toExponential","expression","operator","currentInput","CalcButton","props","color","css","Button","onClick","onButtonClick","children","clearAudio","Audio","clearSound","buttonAudio","buttonSound","evalAudio","evalSound","CalculatorWrapper","Calculator","KeyboardRow","App","addNumber","number","state","setState","addDecimal","dot","indexOf","addOperator","play","changeSign","changed","substring","concat","clearExpression","calcPercentage","evalueteExpression","parseFloat","evaluate","toFixed","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a68d0c28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tadadum.8304135c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pik.9f1dbdbc.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bum.e42ea5ed.mp3\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DisplayArea = styled.div`\r\n    width: 100%;\r\n    height: 140px;\r\n    background-color: #212121;\r\n    color: #ffffff;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ExpressionRow = styled.div`\r\n    height: 100%;\r\n    font-family: Lato;\r\n    font-size: 18px;\r\n    letter-spacing: normal;\r\n    text-align: right;\r\n    color: #d98192;\r\n    padding-top: 28px;\r\n    padding-right: 28px;\r\n`;\r\n\r\nconst ResultRow = styled.div`\r\n    margin-top: 18px;\r\n    font-family: Lato;\r\n    font-size: 50px;\r\n    font-weight: 300;\r\n    text-align: right;\r\n    color: #ffffff;\r\n    padding-right: 28px;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst Display = ({ values }) => {\r\n    let val = values.result;\r\n    console.log(\"result\", val);\r\n\r\n    if (val > 999999999 || val.toString().length > 10) {\r\n        val = val.toExponential(4);\r\n        console.log(\"val po toExp,\", val, val.length, val.toString().length);\r\n    }\r\n\r\n    return (\r\n        <DisplayArea>\r\n            <ExpressionRow>\r\n                {values.expression + values.operator + values.currentInput}\r\n            </ExpressionRow>\r\n            <ResultRow>{val}</ResultRow>\r\n        </DisplayArea>\r\n    );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst CalcButton = styled.div`\r\n    width: 92px;\r\n    max-height: 92px;\r\n    background-image: linear-gradient(to right, #ffffff, #f4f4f4);\r\n    font-family: Lato;\r\n    font-size: 23px;\r\n    font-weight: 300;\r\n    color: #212121;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex: 1;\r\n    cursor: pointer;\r\n\r\n    -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n     -khtml-user-select: none; /* Konqueror HTML */\r\n       -moz-user-select: none; /* Old versions of Firefox */\r\n        -ms-user-select: none; /* Internet Explorer/Edge */\r\n            user-select: none; /* Non-prefixed version, currently\r\n                                  supported by Chrome, Edge, Opera and Firefox */\r\n\r\n    :hover {\r\n        font-weight: 700;\r\n        border: 1px solid #cccccc;   \r\n    }\r\n\r\n    ${(props) =>\r\n        props.color === \"violet\" &&\r\n        css`\r\n            background-color: #9156e1;\r\n            background-image: none;\r\n            color: #ffffff;\r\n        `}\r\n\r\n    ${(props) =>\r\n        props.color === \"dark\" &&\r\n        css`\r\n            background-image: linear-gradient(to right, #f7f7f7, #f1f1f1);\r\n        `}\r\n\r\n    ${(props) =>\r\n        props.color === \"pink\" &&\r\n        css`\r\n            background-color: #e62f89;\r\n            background-image: none;\r\n            color: #ffffff;\r\n            flex: 2;\r\n        `}\r\n`;\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <CalcButton\r\n            color={props.color}\r\n            onClick={() => props.onButtonClick(props.children)}\r\n        >\r\n            {props.children}\r\n        </CalcButton>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { evaluate } from \"mathjs\";\r\n\r\nimport Display from \"./Display\";\r\nimport Button from \"./Button\";\r\n\r\nimport clearSound from \"../assets/tadadum.mp3\";\r\nimport buttonSound from \"../assets/pik.mp3\";\r\nimport evalSound from \"../assets/bum.mp3\";\r\n\r\nconst clearAudio = new Audio(clearSound);\r\nconst buttonAudio = new Audio(buttonSound);\r\nconst evalAudio = new Audio(evalSound);\r\n\r\nconst startClearSound = () => {\r\n    clearAudio.play();\r\n};\r\n\r\nconst startButtonSound = () => {\r\n    buttonAudio.play();\r\n};\r\n\r\nconst startEvalSound = () => {\r\n    evalAudio.play();\r\n};\r\n\r\nconst CalculatorWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    align-items: center;\r\n    background-image: linear-gradient(to right bottom, #9c5cd7, #f69175);\r\n`;\r\n\r\nconst Calculator = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    max-width: 368px;\r\n    max-height: 600px;\r\n    border-radius: 5px;\r\n    background-color: #ffffff;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst KeyboardRow = styled.div`\r\n    display: flex;\r\n    height: 100%;\r\n    margin: 0;\r\n`;\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            expression: \"\",\r\n            currentInput: \"\",\r\n            operator: \"\",\r\n            result: \"\",\r\n        };\r\n    }\r\n\r\n    addNumber = (number) => {\r\n        // prevent too long input\r\n        if (\r\n            this.state.expression.toString().length +\r\n                this.state.currentInput.toString().length >=\r\n            49\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // prevent adding 0 before number without dot\r\n        if (this.state.currentInput === \"0\") {\r\n            return;\r\n        }\r\n\r\n        // prevent too long input\r\n        if (this.state.currentInput.length > 9) {\r\n            return;\r\n        }\r\n\r\n        let result = this.state.result;\r\n\r\n        if (this.state.result !== \"\") {\r\n            result = \"\";\r\n        }\r\n\r\n        if (this.state.operator) {\r\n            this.setState({\r\n                expression: this.state.expression + this.state.operator,\r\n                currentInput: this.state.currentInput + number,\r\n                operator: \"\",\r\n                result: result,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                expression: this.state.expression,\r\n                currentInput: this.state.currentInput + number,\r\n                operator: \"\",\r\n                result: result,\r\n            });\r\n        }\r\n    };\r\n\r\n    addDecimal = (dot) => {\r\n        if (this.state.currentInput === \"\") {\r\n            return;\r\n        }\r\n\r\n        if (\r\n            this.state.expression.toString().length +\r\n                this.state.currentInput.toString().length >=\r\n            49\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.currentInput.indexOf(\".\") === -1) {\r\n            this.setState({\r\n                expression: this.state.expression,\r\n                currentInput: this.state.currentInput + \".\",\r\n                operator: this.state.operator,\r\n                result: this.state.result,\r\n            });\r\n        }\r\n    };\r\n\r\n    addOperator = (operator) => {\r\n        // prevent too long input\r\n        if (\r\n            this.state.expression.toString().length +\r\n                this.state.currentInput.toString().length >=\r\n            49\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // prevent\r\n        // if (this.state.operator === operator) {\r\n        //     return;\r\n        // }\r\n\r\n        if (\r\n            this.state.expression === \"\" &&\r\n            this.state.currentInput === \"\" &&\r\n            this.state.result === \"\"\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        startButtonSound();\r\n\r\n        if (this.state.operator) {\r\n            this.setState({\r\n                expression: this.state.expression,\r\n                currentInput: \"\",\r\n                operator: operator,\r\n                result: this.state.result,\r\n            });\r\n\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                expression:\r\n                    this.state.result ||\r\n                    this.state.expression + this.state.currentInput,\r\n                currentInput: \"\",\r\n                operator: operator,\r\n                result: \"\",\r\n            });\r\n        }\r\n    };\r\n\r\n    changeSign = () => {\r\n        if (this.state.currentInput === \"\") {\r\n            return;\r\n        }\r\n        let changed = this.state.currentInput;\r\n\r\n        if (this.state.currentInput.indexOf(\"-\") === 0) {\r\n            console.log(\"changed\", changed);\r\n            changed = changed.substring(1);\r\n        }\r\n\r\n        if (this.state.currentInput.indexOf(\"-\") === -1) {\r\n            changed = \"-\".concat(this.state.currentInput);\r\n        }\r\n\r\n        this.setState({\r\n            expression: this.state.expression,\r\n            currentInput: changed,\r\n            operator: this.state.operator,\r\n            result: this.state.result,\r\n        });\r\n    };\r\n\r\n    clearExpression = () => {\r\n        startClearSound();\r\n\r\n        this.setState({\r\n            expression: \"\",\r\n            currentInput: \"\",\r\n            operator: \"\",\r\n            result: \"\",\r\n        });\r\n    };\r\n\r\n    calcPercentage = () => {\r\n        console.log(\"%:\", this.state);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            currentInput: this.state.currentInput / 100,\r\n        });\r\n    };\r\n\r\n    evalueteExpression = () => {\r\n        if (this.state.currentInput === \"\") {\r\n            return;\r\n        }\r\n\r\n        startEvalSound();\r\n\r\n        this.setState({\r\n            expression: \"\",\r\n            operator: \"\",\r\n            currentInput: \"\",\r\n            result: parseFloat(\r\n                evaluate(\r\n                    this.state.expression +\r\n                        this.state.operator +\r\n                        this.state.currentInput\r\n                ).toFixed(6)\r\n            ),\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <CalculatorWrapper>\r\n                <Calculator>\r\n                    <Display values={this.state}></Display>\r\n                    <KeyboardRow>\r\n                        <Button\r\n                            color=\"dark\"\r\n                            onButtonClick={this.calcPercentage}\r\n                        >\r\n                            %\r\n                        </Button>\r\n                        <Button color=\"dark\" onButtonClick={this.changeSign}>\r\n                            +/-\r\n                        </Button>\r\n                        <Button\r\n                            color=\"dark\"\r\n                            onButtonClick={this.clearExpression}\r\n                        >\r\n                            C\r\n                        </Button>\r\n                        <Button color=\"violet\" onButtonClick={this.addOperator}>\r\n                            {\" / \"}\r\n                        </Button>\r\n                    </KeyboardRow>\r\n                    <KeyboardRow>\r\n                        <Button onButtonClick={this.addNumber}>7</Button>\r\n                        <Button onButtonClick={this.addNumber}>8</Button>\r\n                        <Button onButtonClick={this.addNumber}>9</Button>\r\n                        <Button\r\n                            onButtonClick={() => this.addOperator(\" * \")}\r\n                            color=\"violet\"\r\n                        >\r\n                            x\r\n                        </Button>\r\n                    </KeyboardRow>\r\n                    <KeyboardRow>\r\n                        <Button onButtonClick={this.addNumber}>4</Button>\r\n                        <Button onButtonClick={this.addNumber}>5</Button>\r\n                        <Button onButtonClick={this.addNumber}>6</Button>\r\n                        <Button onButtonClick={this.addOperator} color=\"violet\">\r\n                            {\" - \"}\r\n                        </Button>\r\n                    </KeyboardRow>\r\n                    <KeyboardRow>\r\n                        <Button onButtonClick={this.addNumber}>1</Button>\r\n                        <Button onButtonClick={this.addNumber}>2</Button>\r\n                        <Button onButtonClick={this.addNumber}>3</Button>\r\n                        <Button color=\"violet\" onButtonClick={this.addOperator}>\r\n                            {\" + \"}\r\n                        </Button>\r\n                    </KeyboardRow>\r\n                    <KeyboardRow>\r\n                        <Button onButtonClick={this.addNumber}>0</Button>\r\n                        <Button onButtonClick={this.addDecimal}>,</Button>\r\n                        <Button\r\n                            color=\"pink\"\r\n                            onButtonClick={this.evalueteExpression}\r\n                        >\r\n                            =\r\n                        </Button>\r\n                    </KeyboardRow>\r\n                </Calculator>\r\n            </CalculatorWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}